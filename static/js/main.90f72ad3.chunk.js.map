{"version":3,"sources":["img/nasa-logo.png","components/Photo.js","components/PhotoGrid.js","components/PhotoSearch.js","components/PhotoDashboard.js","components/PhotoShow.js","App.js","index.js"],"names":["module","exports","Photo","onPhotoClick","e","props","history","push","id","Card","onClick","this","className","Img","src","href","React","Component","PhotoGrid","photos","map","photo","i","key","title","description","photographer","PhotoSearch","state","searchTerms","formHandler","preventDefault","searchUpdate","onSearchClick","onSearchChange","setState","target","value","Body","Form","onSubmit","Row","Col","xs","sm","Group","controlId","Control","type","placeholder","onChange","Button","block","variant","PhotoDashboard","search","toString","axios","get","then","response","data","collection","items","image","nasa_id","date","date_created","links","prevProps","prevState","Jumbotron","logo","alt","PhotoShow","match","params","Title","Text","App","Container","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90f72ad3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nasa-logo.ae42d855.png\";","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\nclass Photo extends React.Component {\r\n\r\n  onPhotoClick = e => {\r\n    this.props.history.push(`/photos/${this.props.id}`)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Card onClick={this.onPhotoClick} className=\"photo-card mb-4\">\r\n          <Card.Img src={this.props.href} />\r\n        </Card>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Photo\r\n","import React from 'react'\r\nimport Photo from './Photo'\r\n\r\n\r\nclass PhotoGrid extends React.Component {\r\n  render() {\r\n\r\n    const photos = this.props.photos.map((photo, i) => (\r\n      <Photo\r\n        {...this.props}\r\n        key = {photo.id}\r\n        id = {photo.id}\r\n        title = {photo.title}\r\n        description = {photo.description}\r\n        photographer = {photo.photographer}\r\n        href = {photo.href}\r\n      />\r\n    ))\r\n\r\n    return (\r\n      <div className=\"card-columns mt-4 mb-4\">\r\n        {photos}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PhotoGrid\r\n","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nclass PhotoSearch extends React.Component {\r\n\r\n  state = {\r\n    searchTerms: ''\r\n  }\r\n\r\n  formHandler = e => {\r\n    e.preventDefault()\r\n    this.props.searchUpdate(this.state.searchTerms)\r\n  }\r\n\r\n  onSearchClick = e => {\r\n    e.preventDefault()\r\n    this.props.searchUpdate(this.state.searchTerms)\r\n  }\r\n\r\n  onSearchChange = e => {\r\n    this.setState({\r\n      searchTerms: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"search-card\">\r\n        <Card.Body className=\"pb-0\">\r\n          <Form onSubmit={this.formHandler}>\r\n            <Row>\r\n              <Col xs={12} sm={9}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Control type=\"text\" placeholder=\"\" value={this.state.searchTerms} onChange={this.onSearchChange} />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={12} sm={3}>\r\n                <Button className=\"mb-3\" block variant=\"primary\" onClick={this.onSearchClick}>\r\n                  Search\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PhotoSearch\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport PhotoGrid from './PhotoGrid'\r\nimport PhotoSearch from './PhotoSearch'\r\nimport logo from '../img/nasa-logo.png'\r\n\r\n\r\nclass PhotoDashboard extends React.Component {\r\n\r\n  state = {\r\n    photos: [],\r\n    search: ''\r\n  }\r\n\r\n  searchUpdate = (searchTerms) => {\r\n    this.setState({\r\n      search: searchTerms.toString()\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios.get(`https://images-api.nasa.gov/search?q=${this.state.search}&media_type=image`)\r\n    axios.get(`https://images-api.nasa.gov/asset/?orderby=popular`)\r\n      .then(response => {\r\n        this.setState({\r\n          photos: response.data.collection.items.map(image => {\r\n            return {\r\n              id: image.data[0].nasa_id,\r\n              date: image.data[0].date_created,\r\n              title: image.data[0].title,\r\n              description: image.data[0].description,\r\n              photographer: image.data[0].photographer,\r\n              href: image.links[0].href\r\n            }\r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.search !== prevState.search) {\r\n      axios.get(`https://images-api.nasa.gov/search?q=${this.state.search}&media_type=image`)\r\n        .then(response => {\r\n          this.setState({\r\n            photos: response.data.collection.items.map(image => {\r\n              return {\r\n                id: image.data[0].nasa_id,\r\n                date: image.data[0].date_created,\r\n                title: image.data[0].title,\r\n                description: image.data[0].description,\r\n                photographer: image.data[0].photographer,\r\n                href: image.links[0].href\r\n              }\r\n            })\r\n          })\r\n        })\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Jumbotron className=\"text-center mt-4 mb-4\">\r\n        <img src={logo} alt=\"nasa logo\" className=\"logo\" />\r\n        <h1 className=\"display-4\">Image Library</h1>\r\n        <hr />\r\n        <p>\r\n          Search the NASA image library.\r\n          Click any image for more information.\r\n        </p>\r\n      </Jumbotron>\r\n        <PhotoSearch searchUpdate = {this.searchUpdate} {...this.props} />\r\n        <PhotoGrid photos={this.state.photos} {...this.props} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PhotoDashboard\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nclass PhotoShow extends React.Component {\r\n\r\n  state = {\r\n    id: '',\r\n    date: '',\r\n    title: '',\r\n    description: '',\r\n    photographer: '',\r\n    href: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://images-api.nasa.gov/search?nasa_id=${this.props.match.params.id}&media_type=image`)\r\n      .then(response => {\r\n        this.setState({\r\n              id: response.data.collection.items[0].data[0].nasa_id,\r\n              date: response.data.collection.items[0].data[0].date_created,\r\n              title: response.data.collection.items[0].data[0].title,\r\n              description: response.data.collection.items[0].data[0].description,\r\n              photographer: response.data.collection.items[0].data[0].photographer,\r\n              href: response.data.collection.items[0].links[0].href\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card className=\"photo-card mt-3 mb-3\">\r\n          <Card.Img src={this.state.href} />\r\n          <hr className=\"card-hr\" />\r\n          <Card.Body>\r\n            <Card.Title className=\"display-4 card-title\">{this.state.title}</Card.Title>\r\n            <hr />\r\n            <Card.Text>\r\n              {this.state.description}\r\n            </Card.Text>\r\n            <div className=\"text-right\">\r\n              <Button href={this.state.href} variant=\"primary\">Download Image</Button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PhotoShow\r\n","import React from 'react';\nimport { BrowserRouter as HashRouter, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport PhotoDashboard from './components/PhotoDashboard'\nimport PhotoShow from './components/PhotoShow'\n\n\nfunction App() {\n  return (\n    <Container>\n      <HashRouter basename='/nasa-image'>\n        <Route exact path='/' component={PhotoDashboard} />\n        <Route path='/photos/:id' component={PhotoShow} />\n      </HashRouter>\n    </Container>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './app.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}